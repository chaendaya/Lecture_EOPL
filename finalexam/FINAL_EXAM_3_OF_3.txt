
[FINAL EXAMINATION: PROBLEM (3/3)]

 - Solve this problem, and submit FINAL_EXAM_3_OF_3.txt to E-class!
   (문제를 풀고 FINAL_EXAM_3_OF_3.txt를 E-class에 제출하면 됩니다.)


================================================================================
Q1. [10 point] Explain expressed values and denoted values briefly. 
               (Expressed value와 Denoted value에 대해 간단히 설명하시오.)

A1.

 - Expressed values: 

 - Denoted values:



================================================================================
Q2. [8 point]  For the following four languages, briefly describe
               what are the expressed values and denoted values: 

               (아래 4가지 언어에서 expressed values와 denoted
               values가 각각 무엇인지 간단히 설명하시오.)

A2.  LETREC

      - Expressed values:

      - Denoted values: 


     EXPLICIT-REFS

      - Expressed values:

      - Denoted values:


     IMPFLICIT-REFS

      - Expressed values:

      - Denoted values:


     THREADA
     
      - Expressed values:

      - Denoted values:


================================================================================
Q3. [10 point]

     In IMPLICIT-REFS, it is designed that every variable denotes a
     reference. In EXPLICIT-REFS, there are three operations newref,
     deref, and setref to create and use references explicitly. Here
     is an example written in IMPLICIT-REFS. Rewrite it into one in
     EXPLICIT-REFS.

     (IMPLICIT-REFS 언어로 작성된 아래 프로그램을 EXPLICIT-REFS 언어의
     프로그램으로 다시 작성하시오.)

	let g = 
	 let count = 0
	 in proc (dummy)
	    begin 
	     set count = -(count, -1)
	     count
	    end
	in (g 11)  


A3. 











================================================================================
Q4. [10 point]  Complete the following program. This program will
                create three subthreads to increment the variable X
                by one in a synchronized way.

                (다음 프로그램을 완성하시오. 3개의 쓰레드를 만들어
                 변수 X를 각각 1 증가시킨다.  이때 동시에 X를 변경하는
                 것을 막는 방식을 사용한다.)

      let x = 0
      in let [          Q4-1           ]
      in let incrX = proc (id)
		       proc (dummy)
			begin
			 [    Q4-2      ]
			 set x = -(x, 1)
                         [    Q4-3      ]
			end
      in begin
	spawn ((incrX 100));
	[        Q4-4              ]
	[        Q4-5              ]
      end             


A4.  

   - Q4-1 : 

   - Q4-2 : 

   - Q4-3 : 

   - Q4-4 : 

   - Q4-5 : 


================================================================================


 +--!Warning! |--------------------------------------------------------------+
 |                                                                           |
 |  - DO NOT DISCUSS WITH OTHER STUDENTS ABOUT THE TAKE-HOME FINAL EXAM!     |
 |    (기말고사 Take-home 시험을 다른 학생과 논의하지 마세요!)                   |
 |                                                                           |
 +---------------------------------------------------------------------------+

