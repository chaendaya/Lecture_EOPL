module ints2
    interface [opaque t
            zero : t
            succ : (t -> t)
            pred : (t -> t)
            iszero : (t -> bool)]  
    body [type t = int
                    zero = 0
                    succ = proc(x : t) -(x,3)
                    pred = proc(x : t) -(x,-3)
                    iszero = proc (x : t) zero?(x)]

let z = from ints2 take zero
in let s = from ints2 take succ
in (s (s z))