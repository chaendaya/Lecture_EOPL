let JOIN = 1 in
let SEND = 2 in
let INPUT = 3 in
let RECV = 4 in
let server = new (proc (self)
                        let registry = () in
                        letrec listen (msg) =
                            let (tag, from) = msg in
                            if zero?(-(tag, JOIN))
                            then begin 
                                    append(registry, from);
                                    send(registry, (JOIN, registry));
                                    print(registry ++ "\n");
                                    ready(listen)
                                 end
                            else if zero?(-(tag, SEND))
                                 then begin
                                        send(registry, (RECV,from));
                                        ready(listen)
                                      end
                                 else
                                    begin
                                        print(500);
                                        ready(listen)
                                    end
                        in ready(listen) )
in

let clientBehavior = proc (self)
                        let clientInput = proc (clientName)
                                            proc(self)
                                                letrec input (d) = 
                                                    let msg = read() in
                                                    begin
                                                        send(clientName, (INPUT, msg));
                                                        (input 0)
                                                    end
                                                in (input 0)
                        in
                        letrec listen(msg) =
                            let (tag, content) = msg in
                            if zero?(-(tag, JOIN))
                            then begin
                                    print("\n" ++ content ++ ": joined\n");
                                    ready(listen)
                                 end
                            else
                                if zero?(-(tag, INPUT))
                                then begin
                                        send(server, (SEND, (content, self)));
                                        ready(listen)
                                     end
                                else 
                                    if zero?(-(tag, RECV))
                                    then
                                        let (recvMsg, recvFrom) = content in 
                                        begin
                                            print("\n" ++ recvFrom ++ ": " ++ recvMsg ++ "\n");
                                            ready(listen)
                                        end
                                    else
                                        begin
                                            print(500);
                                            ready(listen)
                                        end
                        in begin
                                send(server, (JOIN, self));
                                spawn((clientInput self));
                                ready(listen)
                           end
in ready(proc(d)d)
